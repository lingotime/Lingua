<?xml version="1.0" encoding="utf-8"?>

<resources>

    <!-- A tonal variation of the primary color. -->
    <attr name="colorPrimaryVariant" format="color"/>
    <!-- The secondary branding color for the app, usually a bright complement to the primary
         branding color. -->
    <attr name="colorSecondary" format="color"/>
    <!-- A tonal variation of the secondary color. -->
    <attr name="colorSecondaryVariant" format="color"/>
    <!-- The color of surfaces such as cards, sheets, menus. -->
    <attr name="colorSurface" format="color"/>
    <!-- A color that passes accessibility guidelines for text/iconography when drawn on top of
         primary. -->
    <attr name="colorOnPrimary" format="color"/>
    <!-- A color that passes accessibility guidelines for text/iconography when drawn on top of
         secondary. -->
    <attr name="colorOnSecondary" format="color"/>
    <!-- A color that passes accessibility guidelines for text/iconography when drawn on top of
         background. -->
    <attr name="colorOnBackground"/>
    <!-- A color that passes accessibility guidelines for text/iconography when drawn on top of
         error. -->
    <attr name="colorOnError" format="color"/>
    <!-- A color that passes accessibility guidelines for text/iconography when drawn on top of
         surface. -->
    <attr name="colorOnSurface" format="color"/>
    <!-- A color that corresponds to colorPrimary in light themes and colorSurface in dark
         themes. -->
    <attr name="colorPrimarySurface" format="color"/>
    <!-- A color that passes accessibility guidelines for text/iconography when drawn on top of
         colorPrimarySurface. -->
    <attr name="colorOnPrimarySurface" format="color"/>

    <!-- The scrim background that appears below modals and expanded navigation menus.
         The background can either be a color or a bitmap drawable with tileMode set to repeat. -->
    <attr name="scrimBackground" format="color|reference"/>

    <!-- Internal flag used to denote that a theme is a Theme.MaterialComponents theme or a
         Theme.MaterialComponents.Bridge theme. -->
    <attr name="isMaterialTheme" format="boolean"/>

    <!-- When set to true, the material selection controls will tint themselves according to
         Material Theme colors. When set to false, Material Theme colors will
         be ignored. This value should be set to false when using custom drawables
         that should not be tinted. This value is ignored if a buttonTint is set.
         Set this attribute on your styles for each selection control.-->
    <attr name="useMaterialThemeColors" format="boolean"/>

    <!-- Style to use for MaterialCardView in this theme. This explicitly defines a new attribute
        and does not use cardViewStyle from the attribute in the v7 Support Library. We do this
        so that CardView and MaterialCardView can be used side-by-side in the same app. This
        attribute name may change in the future if that usage restriction changes. -->
    <attr name="materialCardViewStyle" format="reference"/>

    <declare-styleable name="MaterialCardView">
        <!-- Whether the card can be checked. -->
        <attr name="android:checkable"/>
        <!-- Foreground color for CardView. -->
        <attr name="cardForegroundColor" format="color"/>
        <!-- Check icon drawable. -->
        <attr name="checkedIcon"/>
        <!-- Tint color for the checked icon. -->
        <attr name="checkedIconTint" format="color"/>
        <!-- Ripple color for the Card. -->
        <attr name="rippleColor"/>
        <!-- State when a Card is being dragged. -->
        <attr name="state_dragged" format="boolean" />
        <!-- Specifies the color used to draw the path outline of the card. Attribute type definition is
             in resources package. -->
        <attr name="strokeColor"/>
        <!-- Width of the stroke path of the card. Default is 0. Attribute type definition is in
             resources package. -->
        <attr name="strokeWidth"/>

        <!-- Shape appearance style reference for MaterialCardView. Attribute declaration is in the
             shape package. -->
        <attr name="shapeAppearance"/>
        <!-- Shape appearance overlay style reference for MaterialCardView. To be used to augment
             attributes declared in the shapeAppearance. Attribute declaration is in the shape package.
             -->
        <attr name="shapeAppearanceOverlay"/>
    </declare-styleable>

    <attr name="materialThemeOverlay"/>
    <attr name="shapeAppearanceMediumComponent"/>
</resources>